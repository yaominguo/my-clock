/* @tailwind base; */
/* @tailwind components; */
/* @tailwind utilities; */

html {
  font-size: 5vw;
}

body {
  --perspective-val: 6rem;
  --duration: 0.6s;
  --radius: 0.5rem;
  --bg-color: aliceblue;
  --clock-color: #000;
  --em-color: #000;
  --font-color: #fff;
  background: var(--bg-color);
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease-out;
}
body.dark {
  --bg-color: #000;
  --clock-color: #18181c;
  --font-color: #ccc;
  --em-color: #ccc;
}

#themeBtn {
  position: absolute;
  top: 0.3rem;
  right: 0.3rem;
  width: 0.4rem;
  cursor: pointer;
}
#screenBtn {
  position: absolute;
  top: 0.3rem;
  right: 1rem;
  width: 0.4rem;
  cursor: pointer;
}

.clock {
  width: 69%;
  display: flex;
  justify-content: space-around;
}

.clock em {
  display: inline-block;
  line-height: 2.6rem;
  font-size: 2rem;
  font-style: normal;
  vertical-align: top;
  color: var(--em-color);
  animation: shine 2s ease-in-out reverse infinite;
}

@-webkit-keyframes shine {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes shine {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.flip {
  display: inline-block;
  position: relative;
  width: 3rem;
  height: 3rem;
  line-height: 3rem;
  border-radius: var(--radius);
  background: var(--clock-color);
  font-size: 2rem;
  color: var(--font-color);
  box-shadow: 0 0 0.1rem rgba(0, 0, 0, 0.5);
  text-align: center;
  font-family: 'Helvetica Neue';
}
.flip:nth-of-type(2) {
  position: relative;
  margin-right: 1rem;
}
.flip:nth-of-type(2)::after{
  content: ':';
  display: inline-block;
  line-height: 2.6rem;
  font-size: 2rem;
  font-style: normal;
  vertical-align: top;
  color: var(--em-color);
  animation: shine 2s ease-in-out reverse infinite;
  position: absolute;
  right: 0;
  transform: translateX(168%);
  font-family: initial;
}

.flip .digital:before,
.flip .digital:after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  background: var(--clock-color);
  overflow: hidden;
  box-sizing: border-box;
}

.flip .digital:before {
  top: 0;
  bottom: 50%;
  border-radius: var(--radius) var(--radius) 0 0;
  border-bottom: 0.02rem solid rgba(255, 255, 255, 0.3);
}

.flip .digital:after {
  top: 50%;
  bottom: 0;
  border-radius: 0 0 var(--radius) var(--radius);
  line-height: 0;
}

.flip .number0:before,
.flip .number0:after {
  content: '0';
}

.flip .number1:before,
.flip .number1:after {
  content: '1';
}

.flip .number2:before,
.flip .number2:after {
  content: '2';
}

.flip .number3:before,
.flip .number3:after {
  content: '3';
}

.flip .number4:before,
.flip .number4:after {
  content: '4';
}

.flip .number5:before,
.flip .number5:after {
  content: '5';
}

.flip .number6:before,
.flip .number6:after {
  content: '6';
}

.flip .number7:before,
.flip .number7:after {
  content: '7';
}

.flip .number8:before,
.flip .number8:after {
  content: '8';
}

.flip .number9:before,
.flip .number9:after {
  content: '9';
}

.flip .front:before {
  z-index: 3;
}

.flip .back:after {
  z-index: 2;
  transform-origin: 50% 0;
  transform: perspective(var(--perspective-val)) rotateX(180deg);
}

.flip .front:after,
.flip .back:before {
  z-index: 1;
}

.flip.go .front::before {
  transform-origin: 50% 100%;
  -webkit-animation: frontFlipDown var(--duration) ease-in-out both;
  animation: frontFlipDown var(--duration) ease-in-out both;
  box-shadow: 0 0.06rem 0 rgba(0, 0, 0, 0.3);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

.flip.go .back:after {
  -webkit-animation: backFlipDown var(--duration) ease-in-out both;
  animation: backFlipDown var(--duration) ease-in-out both;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

@-webkit-keyframes frontFlipDown {
  from {
    transform: perspective(var(--perspective-val)) rotateX(0deg);
  }

  to {
    transform: perspective(var(--perspective-val)) rotateX(-180deg);
  }
}

@keyframes frontFlipDown {
  from {
    transform: perspective(var(--perspective-val)) rotateX(0deg);
  }

  to {
    transform: perspective(var(--perspective-val)) rotateX(-180deg);
  }
}

@-webkit-keyframes backFlipDown {
  from {
    transform: perspective(var(--perspective-val)) rotateX(180deg);
  }

  to {
    transform: perspective(var(--perspective-val)) rotateX(0deg);
  }
}

@keyframes backFlipDown {
  from {
    transform: perspective(var(--perspective-val)) rotateX(180deg);
  }

  to {
    transform: perspective(var(--perspective-val)) rotateX(0deg);
  }
}
